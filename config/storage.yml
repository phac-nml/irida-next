test:
  service: Disk
  root: <%= Rails.root.join("tmp/storage") %>

test_fixtures:
  service: Disk
  root: <%= Rails.root.join("tmp/storage_fixtures") %>

local:
  service: Disk
  root: <%= Rails.root.join("storage") %>

azurite:
  service: AzureStorage
  storage_account_name: devstoreaccount1
  storage_access_key: Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==
  container: irida-next
  storage_blob_host: 'http://127.0.0.1:10000/devstoreaccount1'

# Use bin/rails credentials:edit to set the AWS secrets (as aws:access_key_id|secret_access_key)
amazon:
  service: S3
  access_key_id: <%= Rails.application.credentials.dig(:aws, :access_key_id) %>
  secret_access_key: <%= Rails.application.credentials.dig(:aws, :secret_access_key) %>
  region: <%= ENV.fetch('S3_REGION', 'us-east-1') %>
  bucket: <%= ENV.fetch('S3_BUCKET_NAME', "your_own_bucket-#{Rails.env}") %>

# Remember not to checkin your GCS keyfile to a repository
google:
  service: GCS
  project: <%= ENV.fetch('GCS_PROJECT_NAME', 'your_project') %>
  credentials: <%= Rails.root.join("path/to/gcs.keyfile") %>
  bucket: <%= ENV.fetch('GCS_BUCKET_NAME', "your_own_bucket-#{Rails.env}") %>

# Use bin/rails credentials:edit to set the Azure Storage secret (as azure_storage:storage_access_key)
microsoft:
  service: AzureStorage
  storage_account_name: <%= ENV.fetch('AZURE_STORAGE_ACCOUNT_NAME', 'your_account_name') %>
  storage_access_key: <%= Rails.application.credentials.dig(:azure_storage, :storage_access_key) %>
  container: <%= ENV.fetch('AZURE_STORAGE_CONTAINER_NAME', "your_container_name-#{Rails.env}") %>
  <%= ENV.include?('AZURE_STORAGE_BLOB_HOST') ? "storage_blob_host: #{ENV.fetch('AZURE_STORAGE_BLOB_HOST')}" : "" %>

# mirror:
#   service: Mirror
#   primary: local
#   mirrors: [ amazon, google, microsoft ]
