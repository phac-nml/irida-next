<%= turbo_frame_tag "personal_access_token_form" do %>
  <%= form_with(model: personal_access_token, url: profile_personal_access_tokens_path, html: { novalidate: true }) do |f| %>
    <div class="grid gap-4">

      <%= if personal_access_token.errors.any?
        viral_alert(
          type: "alert",
          message: I18n.t(:"general.form.error_notification"),
          aria: {
            live: "assertive",
          },
        )
      end %>

      <%= render partial: "shared/form/required_field_legend" %>

      <% invalid_token_name = personal_access_token.errors.include?(:name) %>
      <div class="form-field <%= 'invalid' if invalid_token_name %>">
        <%= f.label :name, data: { required: true } %>
        <%= f.text_field :name,
                     required: true,
                     aria: {
                       describedby:
                         (
                           if invalid_token_name
                             f.field_id(:name, "error")
                           else
                             nil
                           end
                         ),
                       invalid: invalid_token_name,
                       required: true,
                     },
                     autofocus: invalid_token_name %>
        <% if invalid_token_name %>
          <%= render "shared/form/field_errors",
          id: f.field_id(:name, "error"),
          errors: personal_access_token.errors[:name] %>
        <% end %>
      </div>
      <div class="form-field">
        <%= pathogen_datepicker(
          id: "personal_access_token_expires_at",
          label: t("activerecord.attributes.personal_access_token.expires_at"),
          input_name: "personal_access_token[expires_at]",
        ) %>
      </div>
      <% invalid_scopes = personal_access_token.errors.include?(:scopes) %>
      <div class="form-field <%= 'invalid' if invalid_scopes %>">
        <fieldset>
          <legend data-required="true"><%= t(:"activerecord.attributes.personal_access_token.scopes") %></legend>
          <% Irida::Auth.all_available_scopes.each do |scope| %>
            <div class="flex">
              <div class="flex items-center h-5">
                <%= check_box_tag "personal_access_token[scopes][]",
                scope,
                personal_access_token.scopes.include?(scope.to_s),
                id: "personal_access_token_scopes_#{scope}",
                aria: {
                  describedby:
                    (
                      if invalid_scopes
                        f.field_id(:scopes, "error")
                      else
                        nil
                      end
                    ),
                  invalid: invalid_scopes,
                } %>
              </div>
              <div class="ml-2 text-sm">
                <%= label_tag "personal_access_token_scopes_#{scope}",
                scope,
                class: "font-medium text-slate-900 dark:text-slate-300" %>
                <p
                  id="<%= "personal_access_token_scopes_#{scope}_help-text" %>"
                  class="
                    text-xs font-normal text-slate-500 dark:text-slate-400
                  "
                ><%= t("auth.scopes.#{scope}") %></p>
              </div>
            </div>
          <% end %>
        </fieldset>
        <% if invalid_scopes %>
          <%= render "shared/form/field_errors",
          id: f.field_id(:scopes, "error"),
          errors: personal_access_token.errors[:scopes] %>
        <% end %>
      </div>
      <div class="my-2">
        <%= f.submit t("profiles.personal_access_tokens.create.submit"),
                 class: "button button-primary" %>
      </div>
    </div>
  <% end %>
<% end %>
