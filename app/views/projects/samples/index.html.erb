<%= turbo_refreshes_with method: :morph, scroll: :preserve %>

<%= turbo_frame_tag "samples_dialog" %>
<%= turbo_frame_tag "samples_alert" %>
<%= turbo_frame_tag "selected" %>

<%= turbo_stream_from @project %>

<div class="fixed-table-component" data-controller="filters">
  <%= render Viral::PageHeaderComponent.new(title: t('.title')) do |component| %>
    <%= component.with_icon(name: "beaker", classes: "h-14 w-14 text-primary-700") %>
    <%= component.with_buttons do %>
      <div class="flex items-center space-x-2">
        <% if allowed_to?(:submit_workflow?, @project) && @pipelines_enabled %>
          <%= link_to pipeline_selection_workflow_executions_submissions_path(namespace_id: @project.namespace.id),
        data: { action: "turbo:morph-element->action-link#idempotentConnect", turbo_stream: true, controller: "action-link", action_link_required_value: 1 },
                  class: "button button--size-default button--state-default action-link" do %>
            <%= viral_icon(name: :rocket_launch, classes: "w-5 h-5 inline-block") %>
            <span class="sr-only"><%= t(:".workflows.button_sr") %></span>
          <% end %>
        <% end %>

        <% if allowed_to?(:clone_sample?, @project) %>
          <%= link_to t("projects.samples.index.clone_button"),
          new_namespace_project_samples_clone_path,
          data: {
            action: "turbo:morph-element->action-link#idempotentConnect",
            turbo_stream: true,
            controller: "action-link",
            action_link_required_value: 1,
          },
          class: "button button--size-default button--state-default action-link" %>
        <% end %>
        <% if allowed_to?(:transfer_sample?, @project) %>
          <%= link_to t("projects.samples.index.transfer_button"),
          new_namespace_project_samples_transfer_path,
          data: {
            action: "turbo:morph-element->action-link#idempotentConnect",
            turbo_stream: true,
            controller: "action-link",
            action_link_required_value: 1,
          },
          class: "button button--size-default button--state-default action-link" %>
        <% end %>
        <% if allowed_to?(:export_data?, @project) %>
          <%= viral_dropdown(label: t(".create_export_button.label"), aria: { label: t('.create_export_button.label') }, caret: true, action_link: true, action_link_value: 1, classes: "font-normal button button--size-default button--state-default action-link") do |dropdown| %>
            <% if @project.namespace.metadata_fields.empty? %>
              <% dropdown.with_item(
                label: t(".create_export_button.linelist_export"),
                url:
                  new_data_export_path(
                    export_type: "linelist",
                    namespace_id: @project.namespace.id,
                  ),
                data: {
                  turbo_stream: true,
                },
                class:
                  "flex items-center px-4 py-2 bg-slate-100 text-slate-600 dark:bg-slate-600 dark:text-slate-300 border-slate-100 dark:border-slate-600 pointer-events-none cursor-not-allowed",
              ) %>
            <% else %>
              <% dropdown.with_item(
                label: t(".create_export_button.linelist_export"),
                url:
                  new_data_export_path(
                    export_type: "linelist",
                    namespace_id: @project.namespace.id,
                  ),
                data: {
                  turbo_stream: true,
                },
              ) %>
            <% end %>
            <% dropdown.with_item(
              label: t(".create_export_button.sample_export"),
              url:
                new_data_export_path(
                  export_type: "sample",
                  namespace_id: @project.namespace.id,
                ),
              data: {
                turbo_stream: true,
              },
            ) %>
          <% end %>
        <% end %>
        <% if allowed_to?(:update_sample_metadata?, @project.namespace) && @has_samples %>
          <%= link_to t("projects.samples.index.import_metadata_button"),
          new_namespace_project_samples_file_import_path,
          data: {
            turbo_stream: true,
          },
          class: "button button--size-default button--state-default" %>
        <% end %>
        <% if allowed_to?(:create_sample?, @project) %>
          <%= link_to t("projects.samples.index.new_button"),
          new_namespace_project_sample_path,
          class: "button button--size-default button--state-primary",
          "aria-label": t(".actions.button_add_aria_label") %>
        <% end %>
        <% if allowed_to?(:destroy_sample?, @project) %>
          <%= link_to t(".delete_samples_button"),
          new_namespace_project_samples_deletion_path(deletion_type: "multiple"),
          data: {
            action: "turbo:morph-element->action-link#idempotentConnect",
            turbo_stream: true,
            controller: "action-link",
            action_link_required_value: 1,
          },
          class: "button button--size-default button--state-destructive action-link" %>
        <% end %>
      </div>
    <% end %>
  <% end %>

  <div class="flex mb-2">
    <div class="inline-flex flex-grow space-x-2">
      <% if allowed_to?(:submit_workflow?, @project) || allowed_to?(:clone_sample?, @project) || allowed_to?(:transfer_sample?, @project) || allowed_to?(:export_data?, @project) %>
        <%= search_form_for(
                  @q,
                  url: select_namespace_project_samples_url(**request.query_parameters),
                  html: { id: "select-all-form" },
                ) do |f| %>
          <input type="hidden" name="format" value="turbo_stream"/>
          <input type="hidden" name="select" value="on"/>
          <input
            type="hidden"
            name="timestamp"
            value="<%=@timestamp%>"
            data-turbo-temporary
          >
          <%= f.submit t(".select_all_button"),
                   class: "button button--state-default button--size-default" %>
        <% end %>
        <%= search_form_for(
                  @q,
                  url: select_namespace_project_samples_url(**request.query_parameters),
                  html: { id: "deselect-all-form" },
                ) do |f| %>
          <input type="hidden" name="format" value="turbo_stream"/>
          <%= f.submit t(".deselect_all_button"),
                   class: "button button--state-default button--size-default" %>
        <% end %>
      <% end %>
    </div>
    <div class="flex grow-0">
      <%= render SearchComponent.new(
        query: @q,
        url: search_namespace_project_samples_url,
        search_attribute: :name_or_puid_cont,
        placeholder: t(".search.placeholder"),
        html: { method: :post },
      ) do %>
        <input type="hidden" name="format" value="turbo_stream"/>
        <input type="hidden" name="limit" value="<%=@pagy.limit%>"/>
      <% end %>
      <%= search_form_for @q, url: search_namespace_project_samples_url, html: { method: :post, "data-controller": "filters metadata-toggle", "data-turbo-action": "replace", "data-metadata-toggle-page-value": @pagy.page, "data-filters-selection-outlet": "#samples-table" }, class:
        "inline-flex items-center space-x-2 filters" do |f| %>
        <input type="hidden" name="format" value="turbo_stream"/>
        <input type="hidden" name="limit" value="<%=@pagy.limit%>"/>
        <%= render ListFilterComponent.new(
          form: f,
          filters: @search_params[:name_or_puid_in],
        ) %>
        <%= render partial: "projects/samples/shared/metadata_toggle", locals: { form: f } %>

      <% end %>
    </div>
  </div>

  <%= render partial: "table",
  locals: {
    project: @project,
    samples: @samples,
    pagy: @pagy,
  } %>
</div>
