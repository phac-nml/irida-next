<%= turbo_refreshes_with method: :morph, scroll: :preserve %>

<%= turbo_frame_tag "export_dialog" %>
<%= turbo_frame_tag "selected" %>

<%= turbo_stream_from @namespace.automation_bot, :workflow_executions %>

<%= render Viral::PageHeaderComponent.new(
  title: t(".title"),
  subtitle: t(".subtitle"),
) do |component| %>
  <%= component.with_buttons do %>
   <%= link_to t(".create_export_button"),
      new_data_export_path(
        export_type: "analysis",
        analysis_type: "project",
        namespace_id: @namespace.id
      ),
      data: {
        action: "turbo:morph-element->action-link#idempotentConnect",
        turbo_stream: true,
        controller: "action-link",
        action_link_required_value: 1,
      },
      class: "button button--size-default button--state-default action-link" %>
  <% end %>
<% end %>
<div class="flow-root">
  <div class="flex mb-2">
  <% if allowed_to?(:export_data?, @project.namespace) %>
    <div class="inline-flex grow space-x-2">
      <%= search_form_for(
                @q,
                url: select_namespace_project_workflow_executions_url(**request.query_parameters),
                html: { id: "select-all-form" },
                class: "filters align-middle"
              ) do |f| %>
        <input type="hidden" name="format" value="turbo_stream"/>
        <input type="hidden" name="select" value="on"/>
        <%= f.submit t(".select_all_button"),
                  class: "button button--state-default button--size-default" %>
      <% end %>
      <%= search_form_for(
                @q,
                url: select_namespace_project_workflow_executions_url(**request.query_parameters),
                html: { id: "deselect-all-form" },
                class: "filters align-middle"
              ) do |f| %>
        <input type="hidden" name="format" value="turbo_stream"/>
        <%= f.submit t(".deselect_all_button"),
                  class: "button button--state-default button--size-default" %>
      <% end %>
    </div>
  <% end %>
    <div class="grow-0">
        <%= render SearchComponent.new(
          query: @q,
          url: namespace_project_workflow_executions_path(**request.query_parameters),
          search_attribute: :name_or_id_cont,
          placeholder: t('.search.placeholder')
        ) %>
    </div>
  </div>
</div>

<%= viral_data_table(
  type: "workflow_executions",
  data: @workflow_executions,
  has_data: @has_workflow_executions,
  pagy: @pagy,
  q: @q,
  abilities: {
      select: allowed_to?(:export_data?, @namespace)
    },
  row_actions: {
    cancel: allowed_to?(:update?, @namespace),
    destroy: allowed_to?(:update?, @namespace),
  },
  search_params: @search_params,
  namespace: @namespace) do |table| %>
  <% table.with_column(title: 'id', sticky: true, link: 'show') %>
  <% table.with_column(title: 'name') %>
  <% table.with_column(title: 'state', pill: true) %>
  <% table.with_column(title: 'run_id') %>
  <% table.with_column(title: 'workflow_name', metadata: true) %>
  <% table.with_column(title: 'workflow_version', metadata: true) %>
  <% table.with_column(title: 'created_at', time: true) %>
  <% table.with_column(title: 'updated_at', time_ago: true) %>
<% end %>
