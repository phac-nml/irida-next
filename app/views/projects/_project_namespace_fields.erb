<% invalid_name = @project.namespace.errors.include?(:name) %>
<div class="form-field <%= 'invalid' if invalid_name %>">
  <%= builder.label :name %>
  <%= builder.text_field :name,
                     data: {
                       "slugify-target": "name",
                       action: "input->slugify#nameChanged"
                     },
                     required: true,
                     autofocus: true,
                     placeholder: t(:"projects.new.placeholder") %>
  <%= render "shared/form/field_errors",
  errors: @project.namespace.errors.full_messages_for(:name) %>
</div>
<div class="grid grid-cols-2 gap-4">
  <div class="form-field">
    <%= builder.label :parent_id %>
    <div class="flex items-center whitespace-nowrap">
      <div
        class="
          inline-flex
          items-center
          px-3
          py-2.5
          text-sm
          text-slate-600
          bg-slate-200
          border
          border-r-0
          border-slate-300
          rounded-l-lg
          dark:bg-slate-600
          dark:text-slate-400
          dark:border-slate-600
        "
      >
        <%= root_url %>
      </div>
      <%= builder.collection_select(
        :parent_id,
        authorized_namespaces,
        :id,
        :full_path,
        { selected: params[:group_id] || @project.namespace.parent.id },
        { class: "prefixed" }
      ) %>
      <div class="ml-4 dark:text-slate-200">/</div>
    </div>
  </div>
  <% invalid_path = @project.namespace.errors.include?(:path) %>
  <div class="form-field <%= 'invalid' if invalid_path %>">
    <%= builder.label :path %>
    <%= builder.text_field :path,
                       data: {
                         "slugify-target": "path"
                       },
                       pattern: Irida::PathRegex::PATH_REGEX_STR,
                       required: true,
                       title: t(:"projects.new.help") %>
    <%= render "shared/form/field_errors",
    errors: @project.namespace.errors.full_messages_for(:path) %>
  </div>
</div>
<% invalid_description = @project.namespace.errors.include?(:description) %>
<div class="form-field <%= 'invalid' if invalid_description %>">
  <%= builder.label :description %>
  <%= builder.text_area :description,
                    {
                      :class => "form-control",
                      "aria-label" => "Project description, not required"
                    } %>
  <%= render "shared/form/field_errors",
  errors: @project.namespace.errors.full_messages_for(:description) %>
</div>
