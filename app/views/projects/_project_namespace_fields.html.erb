<%= if @project.namespace.errors.any?
  viral_alert(
    type: "alert",
    message: I18n.t(:"general.form.error_notification"),
    aria: {
      live: "assertive",
    },
  )
end %>

<%= render partial: "shared/form/required_field_legend" %>

<% invalid_name = @project.namespace.errors.include?(:name) %>
<div class="form-field <%= 'invalid' if invalid_name %>">
  <%= builder.label :name, data: { required: true } %>
  <%= builder.text_field :name,
                     data: {
                       "slugify-target": "name",
                       action: "input->slugify#nameChanged",
                     },
                     required: true,
                     placeholder: t(:"projects.new.placeholder"),
                     aria: {
                       describedby: [
                         invalid_name ? builder.field_id(:name, "error") : nil,
                         builder.field_id(:name, "hint"),
                       ].join(" "),
                       invalid: invalid_name,
                       required: true,
                     },
                     autofocus: invalid_name %>

  <% if invalid_name %>
    <%= render "shared/form/field_errors",
    id: builder.field_id(:name, "error"),
    errors: @project.namespace.errors.full_messages_for(:name) %>
  <% end %>
  <span id="<%= builder.field_id(:name, "hint") %>" class="field-hint">
    <%== t(:"projects.create.name_help") %>
  </span>
</div>
<fieldset class="grid @xs:grid-cols-1 @5xl:grid-cols-2 gap-4 border-0 p-0 m-0">
  <legend class="sr-only"><%= t(:"projects.create.namespace_and_path") %></legend>
  <% invalid_namespace = @project.namespace.errors.include?(:namespace) %>
  <div class="form-field <%= 'invalid' if invalid_namespace %>">
    <% form_id = "namespace-select" %>
    <label
      for="<%= form_id %>"
      class="mb-1 block text-sm font-medium text-slate-900 dark:text-white"
    >
      <%= t("activerecord.attributes.namespaces/project_namespace.parent_id") %>
      <span class="text-red-500">*</span>
    </label>
    <div>
      <% selected_value =
        params.has_key?(:group_id) ? params[:group_id] : current_user.namespace.id %>
      <%= viral_prefixed_select2(form: builder, name: :parent_id, id: form_id, selected_value: selected_value, placeholder: t(:"projects.new.select_namespace"), aria: { invalid: invalid_namespace,
      describedby: [invalid_namespace ? builder.field_id(:namespace, "error") : nil, builder.field_id(:namespace, "hint")].join(" ") } ) do |select| %>
        <% authorized_namespaces.each do |namespace| %>
          <% select.with_option(
                      value: namespace.id,
                      label: namespace.full_path,
                    ) do %>
            <span
              class="
                text-slate-900 dark:text-slate-400 font-semibold block pointer-events-none
              "
            >
              <%= namespace.name %>
              <%= render PuidComponent.new(puid: namespace.puid, show_clipboard: false) %>
            </span>
            <span class="text-slate-600 dark:text-white block pointer-events-none">
              <%= namespace.full_path %>
            </span>
          <% end %>
        <% end %>
        <%= select.with_empty_state do %>
          <%= t(:"projects.new.empty_state") %>
        <% end %>
      <% end %>
    </div>
    <% if invalid_namespace %>
      <%= render "shared/form/field_errors",
      id: builder.field_id(:namespace, "error"),
      errors: @project.namespace.errors.messages.values.flatten %>
    <% end %>

    <span id="<%= builder.field_id(:namespace, "hint") %>" class="field-hint">
      <%= t(:"projects.create.namespace_help") %>
    </span>
  </div>

  <% invalid_path = @project.namespace.errors.include?(:path) %>
  <div class="form-field <%= 'invalid' if invalid_path %>">
    <%= builder.label :path, data: { required: true } %>
    <%= builder.text_field :path,
                       data: {
                         "slugify-target": "path",
                       },
                       pattern: Irida::PathRegex::PATH_REGEX_STR,
                       required: true,
                       title: t(:"projects.new.help"),
                       aria: {
                         describedby: [
                           invalid_path ? builder.field_id(:path, "error") : nil,
                           builder.field_id(:path, "hint"),
                         ].join(" "),
                         invalid: invalid_path,
                         required: true,
                       },
                       autofocus: invalid_path %>

    <% if invalid_path %>
      <%= render "shared/form/field_errors",
      errors: @project.namespace.errors.full_messages_for(:path) %>
    <% end %>
    <span id="<%= builder.field_id(:path, "hint") %>" class="field-hint">
      <%= t(:"projects.create.path_help") %>
    </span>

  </div>
</fieldset>
<% invalid_description = @project.namespace.errors.include?(:description) %>
<div class="form-field <%= 'invalid' if invalid_description %>">
  <%= builder.label :description %>
  <%= builder.text_area :description,
                    {
                      :class => "form-control",
                      "aria-describedby" => [
                        (
                          if invalid_description
                            builder.field_id(:description, "error")
                          else
                            nil
                          end
                        ),
                        builder.field_id(:description, "hint"),
                      ].join(" "),
                      "aria-invalid" => invalid_description,
                      :autofocus => invalid_description,
                    } %>
  <% if invalid_description %>
    <%= render "shared/form/field_errors",
    errors: @project.namespace.errors.full_messages_for(:description) %>
  <% end %>
  <span id="<%= builder.field_id(:description, "hint") %>" class="field-hint">
    <%= t(:"projects.create.description_help") %>
  </span>
</div>
