<% invalid_name = @project.namespace.errors.include?(:name) %>
<div class="form-field <%= 'invalid' if invalid_name %>">
  <%= builder.label :name %>
  <%= builder.text_field :name,
                     data: {
                       "slugify-target": "name",
                       action: "input->slugify#nameChanged",
                     },
                     required: true,
                     placeholder: t(:"projects.new.placeholder") %>
  <%= render "shared/form/field_errors",
  errors: @project.namespace.errors.full_messages_for(:name) %>
</div>
<div class="grid @xs:grid-cols-1 @5xl:grid-cols-2 gap-4">
  <div>
    <% form_id = "namespace-select" %>
    <label
      for="<%= form_id %>"
      class="mb-1 block text-sm font-medium text-slate-900 dark:text-white"
    >
      <%= t("activerecord.attributes.namespaces/project_namespace.parent_id") %>
    </label>
    <div class="flex items-center">
      <% selected_value =
        params.has_key?(:group_id) ? params[:group_id] : current_user.namespace.id %>
      <%= viral_prefixed_select2(form: builder, name: :parent_id, id: form_id, selected_value: selected_value, placeholder: t(:"projects.new.select_namespace")) do |select| %>
        <% authorized_namespaces.each do |namespace| %>
          <% select.with_option(
                      value: namespace.id,
                      label: namespace.name,
                    ) do %>
            <span
              class="
                text-slate-900 dark:text-slate-400 font-semibold block pointer-events-none
              "
            >
              <%= namespace.name %>
              <%= render PuidComponent.new(puid: namespace.puid, show_clipboard: false) %>
            </span>
            <span class="text-slate-500 dark:text-white block pointer-events-none">
              <%= namespace.full_path %>
            </span>
          <% end %>
        <% end %>
        <%= select.with_empty_state do %>
          <%= t(:"projects.new.empty_state") %>
        <% end %>
      <% end %>
      <div class="ml-4 dark:text-slate-200">/</div>
    </div>
  </div>
  <% invalid_path = @project.namespace.errors.include?(:path) %>
  <div class="form-field <%= 'invalid' if invalid_path %>">
    <%= builder.label :path %>
    <%= builder.text_field :path,
                       data: {
                         "slugify-target": "path",
                       },
                       pattern: Irida::PathRegex::PATH_REGEX_STR,
                       required: true,
                       title: t(:"projects.new.help") %>
    <%= render "shared/form/field_errors",
    errors: @project.namespace.errors.full_messages_for(:path) %>
  </div>
</div>
<% invalid_description = @project.namespace.errors.include?(:description) %>
<div class="form-field <%= 'invalid' if invalid_description %>">
  <%= builder.label :description %>
  <%= builder.text_area :description,
                    {
                      :class => "form-control",
                      "aria-label" => "Project description, not required",
                    } %>
  <%= render "shared/form/field_errors",
  errors: @project.namespace.errors.full_messages_for(:description) %>
</div>
