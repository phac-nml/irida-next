<%= turbo_refreshes_with method: :morph, scroll: :preserve %>

<%= render Viral::PageHeaderComponent.new(title: t(".title")) do |component| %>
  <%= component.with_buttons do %>
    <%= link_to t(:".create_group_button"),
    new_group_path,
    class: "inline-flex items-center justify-center button button-primary" %>
  <% end %>
<% end %>
<div class="flex flex-col">
  <div
    class="
      flex text-center border-b border-slate-200 dark:text-slate-400
      dark:border-slate-700
    "
  >
    <div class="flex flex-row flex-wrap items-center ml-auto space-x-2 font-normal">
      <%= render SearchComponent.new(
        query: @q,
        url: dashboard_groups_url,
        search_attribute: :name_or_puid_cont,
        placeholder: t(:".search.placeholder"),
        total_count: @pagy.count,
        value: @q.name_or_puid_cont,
      ) %>
      <div class="flex flex-row items-center ml-auto space-x-2 font-normal py-1.5">
        <%= render Ransack::SortDropdownComponent.new(
          @q,
          "groups",
          [
            { name: "created_at", dir: "desc" },
            { name: "created_at", dir: "asc" },
            { name: "name", dir: "asc" },
            { name: "name", dir: "desc" },
            { name: "updated_at", dir: "desc" },
            { name: "updated_at", dir: "asc" },
          ],
        ) %>
      </div>
    </div>
  </div>
  <% if @has_groups %>
    <div class="flex flex-col gap-2" id="groups_tree">
      <%= render TreegridComponent.new do |component| %>
        <% @groups.each_with_index do |group, group_index| %>
          <%= component.with_row(tabindex: (group_index.zero? ? 0 : -1), expandable: !@render_flat_list && group.children_of_type?(Group.sti_name), posinset: group_index + 1, setsize: @groups.size, aria: { label: group.name}, button_arguments: {data: {"toggle-url": public_send("dashboard_groups_url", { parent_id: group.id, collapse: false, level: 1, posinset: group_index + 1, setsize: @groups.size })}}, id: dom_id(group)) do %>
            <%= render NamespaceRow::ContentsComponent.new(namespace: group, icon_size: :medium) %>
          <% end %>
        <% end %>
      <% end %>
      <% if @pagy.vars[:size].positive? && @pagy.count.positive? %>
        <div class="flex flex-row-reverse">
          <%= render Viral::Pagy::PaginationComponent.new(@pagy) %>
        </div>
      <% else %>
        <%= viral_empty(
          icon_name: ICON::MAGNIFYING_GLASS,
          title: t("components.viral.pagy.empty_state.title"),
          description: t("components.viral.pagy.empty_state.description"),
        ) %>
      <% end %>
    </div>
  <% else %>
    <div class="empty_state_message">
      <%= viral_empty(
        icon_name: ICON::GROUPS,
        title: t(".no_groups_title"),
        description: t(".no_groups_description"),
      ) %>
    </div>
  <% end %>
</div>
