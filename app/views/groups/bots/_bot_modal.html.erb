<%= viral_dialog(open: open) do |dialog| %>
  <% dialog.with_header(
    title: t("groups.bots.index.bot_listing.new_bot_modal.title"),
  ) %>

  <div class="mb-6 text-lg font-normal text-slate-500 dark:text-slate-400">
    <p class="dark:text-slate-400">
      <%= t("groups.bots.index.bot_listing.new_bot_modal.description") %>
    </p>
  </div>

  <div class="mb-4">
    <%= turbo_frame_tag("new_bot_account-error-alert") %>
  </div>

  <%= form_for(@bot_account, url: group_bots_path, method: :post, html: { novalidate: true }) do |form| %>
    <%= form.fields_for :user do |user_fields| %>
      <div class="grid gap-4">
        <%= user_fields.fields_for :members do |member_fields| %>
          <%= render partial: "shared/form/required_field_legend" %>
          <% invalid_access_level =
            @bot_account.user.members[0].errors.include?(:access_level) %>
          <div class="form-field <%= 'invalid' if invalid_access_level %>">
            <%= member_fields.label :access_level, data: { required: true } %>
            <%= member_fields.select :access_level,
                                 @access_levels,
                                 {
                                   prompt:
                                     t(
                                       "groups.bots.index.bot_listing.new_bot_modal.select_access_level",
                                     ),
                                 },
                                 {
                                   required: true,
                                   aria: {
                                     describedby:
                                       (
                                         if invalid_access_level
                                           member_fields.field_id(:access_level, "error")
                                         else
                                           nil
                                         end
                                       ),
                                     invalid: invalid_access_level,
                                     required: true,
                                   },
                                   autofocus: invalid_access_level,
                                 } %>
            <% if invalid_access_level %>
              <%= render "shared/form/field_errors",
              id: member_fields.field_id(:access_level, "error"),
              errors: @bot_account.user.members[0].errors.full_messages_for(:access_level) %>
            <% end %>
          </div>
        <% end %>

        <%= user_fields.fields_for :personal_access_tokens do |pat_fields| %>
          <div
            class="
              grid gap-4 p-6 bg-white border rounded-lg shadow border-slate-200
              dark:bg-slate-800 dark:border-slate-700
            "
          >
            <p class="font-semibold dark:text-white"><%= t("groups.bots.index.bot_listing.new_bot_modal.token_details") %></p>
            <% invalid_token_name =
              @bot_account.user.personal_access_tokens[0].errors.include?(:name) %>
            <div class="form-field <%= 'invalid' if invalid_token_name %>">
              <%= pat_fields.label :name, data: { required: true } %>
              <%= pat_fields.text_field :name,
                                    required: true,
                                    class: "form-control",
                                    aria: {
                                      describedby:
                                        (
                                          if invalid_token_name
                                            pat_fields.field_id(:name, "error")
                                          else
                                            nil
                                          end
                                        ),
                                      invalid: invalid_token_name,
                                      required: true,
                                    },
                                    autofocus: invalid_token_name %>
              <% if invalid_token_name %>
                <%= render "shared/form/field_errors",
                id: pat_fields.field_id(:name, "error"),
                errors:
                  @bot_account.user.personal_access_tokens[0].errors.full_messages_for(:name) %>
              <% end %>
            </div>
            <div class="form-field">
              <%= pathogen_datepicker(
                id: pat_fields.field_id(:expires_at),
                input_name: pat_fields.field_name(:expires_at),
                label: t("groups.bots.index.bot_listing.new_bot_modal.expires_at"),
                selected_date: @bot_account.user.personal_access_tokens[0][:expires_at],
              ) %>
            </div>

            <% invalid_scopes =
              @bot_account.user.personal_access_tokens[0].errors.include?(:scopes) %>
            <div class="form-field <%= 'invalid' if invalid_scopes %>">
              <fieldset>
                <legend data-required="true"><%= t(:"activerecord.attributes.personal_access_token.scopes") %></legend>
                <% Irida::Auth.all_available_scopes.each do |scope| %>
                  <div class="flex">
                    <div class="flex items-center h-5">
                      <%= pat_fields.check_box :scopes,
                                           {
                                             checked:
                                               @bot_account.user.personal_access_tokens[
                                                 0
                                               ].scopes.include?(scope.to_s),
                                             aria: {
                                               describedby:
                                                 (
                                                   if invalid_scopes
                                                     pat_fields.field_id(:scopes, "error")
                                                   else
                                                     nil
                                                   end
                                                 ),
                                               invalid: invalid_scopes,
                                             },
                                             include_hidden: false,
                                             multiple: true,
                                           },
                                           scope %>
                    </div>
                    <div class="ml-2 text-sm">
                      <%= label_tag pat_fields.field_id(:scopes, scope.to_s),
                      scope,
                      class: "font-medium text-slate-900 dark:text-slate-300" %>
                      <p
                        id="<%= pat_fields.field_id(:scopes, "help-text") %>"
                        class="
                          text-xs font-normal text-slate-500 dark:text-slate-400
                        "
                      ><%= t("auth.scopes.#{scope}") %></p>
                    </div>
                  </div>
                <% end %>
              </fieldset>
              <% if invalid_scopes %>
                <%= render "shared/form/field_errors",
                id: pat_fields.field_id(:scopes, "error"),
                errors:
                  @bot_account.user.personal_access_tokens[0].errors.full_messages_for(:scopes) %>
              <% end %>
            </div>

          </div>
        <% end %>
      </div>
    <% end %>
    <div class="mt-4">
      <%= form.submit t("groups.bots.index.bot_listing.new_bot_modal.submit"),
                  class: "button button-primary" %>
      <button
        type="button"
        class="button button-default"
        data-action="click->viral--dialog#close"
      >
        <%= t("groups.bots.index.bot_listing.new_bot_modal.cancel") %>
      </button>
    </div>
  <% end %>
<% end %>
